AWSTemplateFormatVersion: "2010-09-09"
Description: CodePipeline of AWS CloudFormation continuous delivery.

Parameters:
  CfnStackName:
    Type: String
    Default: Bob
    Description: Master CloudFormation stack name managed by the pipeline.
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-]*"
  CfnRepoName:
    Type: String
    Default: Bob
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9-_]*"
    MinLength: 1
    MaxLength: 100
    Description: Project name, used in CodeCommit repository name, must be
      unique across regions.
  CfnRepoDescription:
    Type: String
    Default: "No Description"
    MinLength: 1
    MaxLength: 100
    Description: Project description
  CfnBuildSpec:
    Type: String
    Description: The filename of the CodeBuild build specification.
    Default: "buildspec.yaml"
  CfnExecutionRoleArn:
    Default: ''
    Description: CloudFormation execution role ARN, will create an execution
      role with AdministratorAccess if this is left empty.
    Type: String
  ApprovalEmails:
    Default: nobody@amazon.com
    Description: List of comma delimited email addresses to send spproval messages.
    Type: CommaDelimitedList
  NumOfEmails:
    Default: '1'
    Description: Number of email addresses in ApprovalEmails.
    Type: String
  UseStaging:
    Type: String
    AllowedValues:
      - 'yes'
      - 'no'
    Default: 'yes'
    Description: Whether creat a step in codepipeline for validation
      templates in staging stack, turn this off in a development enviorment.


Conditions:
  SixEmailsCondition: !Equals [!Ref 'NumOfEmails', '6']
  FiveEmailsCondition: !Or [!Equals [!Ref 'NumOfEmails', '6'], !Equals [!Ref 'NumOfEmails',
      '5']]
  FourEmailsCondition: !Or [!Equals [!Ref 'NumOfEmails', '6'], !Equals [!Ref 'NumOfEmails',
      '5'], !Equals [!Ref 'NumOfEmails', '4'], !Equals [!Ref 'NumOfEmails', '3']]
  ThreeEmailsCondition: !Or [!Equals [!Ref 'NumOfEmails', '6'], !Equals [!Ref 'NumOfEmails',
      '5'], !Equals [!Ref 'NumOfEmails', '4'], !Equals [!Ref 'NumOfEmails', '3']]
  TwoEmailsCondition: !Or [!Equals [!Ref 'NumOfEmails', '6'], !Equals [!Ref 'NumOfEmails',
      '5'], !Equals [!Ref 'NumOfEmails', '4'], !Equals [!Ref 'NumOfEmails', '3'],
    !Equals [!Ref 'NumOfEmails', '2']]
  ChinaRegionCondition: !Equals [!Ref 'AWS::Region', cn-north-1]
  CreateExecutionRoleCondition: !Equals [!Ref 'CfnExecutionRoleArn', '']
  UseStagingCondition: !Equals [!Ref 'UseStaging', 'yes']

Resources:

  ArtifactStore:
    Type: AWS::S3::Bucket

  CodeRepository:
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryName: !Ref CfnRepoName
      RepositoryDescription: !Ref CfnRepoDescription

  ApprovalTopic:
    Properties:
      Subscription:
      - Endpoint: !Select [0, !Ref 'ApprovalEmails']
        Protocol: email
      - !If [TwoEmailsCondition, {Endpoint: !Select [1, !Ref 'ApprovalEmails'], Protocol: email},
        !Ref 'AWS::NoValue']
      - !If [ThreeEmailsCondition, {Endpoint: !Select [2, !Ref 'ApprovalEmails'], Protocol: email},
        !Ref 'AWS::NoValue']
      - !If [FourEmailsCondition, {Endpoint: !Select [3, !Ref 'ApprovalEmails'], Protocol: email},
        !Ref 'AWS::NoValue']
      - !If [FiveEmailsCondition, {Endpoint: !Select [4, !Ref 'ApprovalEmails'], Protocol: email},
        !Ref 'AWS::NoValue']
      - !If [SixEmailsCondition, {Endpoint: !Select [5, !Ref 'ApprovalEmails'], Protocol: email},
        !Ref 'AWS::NoValue']
    Type: AWS::SNS::Topic

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        -
          PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - s3:ListBucket
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:PutObject
                - s3:PutObjectVersion
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStore.Arn
                  - Fn::Sub:
                    - "${Store}/*"
                    - Store: !GetAtt ArtifactStore.Arn

  CfnCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-CfnCodeBuild-${AWS::Region}
      Description: Build, validate and package CloudFormation templates.
      ServiceRole:
        Fn::GetAtt: [CodeBuildRole, Arn]
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Ref: CfnBuildSpec
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/python:2.7.12
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CFN_PACKAGE_BUCKET
            Value: !Ref ArtifactStore

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Condition: CreateExecutionRoleCondition
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: CodeCommitAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - codecommit:List*
                  - codecommit:Get*
                  - codecommit:BatchGetRepositories
                  - codecommit:GitPull
                  - codecommit:UploadArchive
                Effect: Allow
                Resource:
                  - !GetAtt CodeRepository.Arn
        -
          PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:PutObject
                - s3:PutObjectVersion
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStore.Arn
                  - Fn::Sub:
                    - "${Store}/*"
                    - Store: !GetAtt ArtifactStore.Arn
        -
          PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - codebuild:StartBuild
                - codebuild:BatchGetBuilds
                Effect: Allow
                Resource:
                  - !GetAtt CfnCodeBuildProject.Arn
        -
          PolicyName: IamAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - iam:PassRole
                Effect: Allow
                Resource:
                  - Fn::If:
                    - 'CreateExecutionRoleCondition'
                    - !GetAtt CloudFormationExecutionRole.Arn
                    - !Ref CfnExecutionRoleArn
        -
          PolicyName: CloudFormationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - cloudformation:DescribeStacks
                - cloudformation:CreateStack
                - cloudformation:DeleteStack
                - cloudformation:UpdateStack
                - cloudformation:DescribeChangeSet
                - cloudformation:CreateChangeSet
                - cloudformation:ExecuteChangeSet
                Effect: Allow
                Resource: "*"
        -
          PolicyName: SNSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - sns:Publish
                Effect: Allow
                Resource: !Ref ApprovalTopic

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location:
          !Ref ArtifactStore
      RoleArn:
        Fn::GetAtt:
          - PipelineRole
          - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: CfnSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                BranchName: master
                RepositoryName: !Ref CfnRepoName
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: CfnSourceArtifact
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: CfnCodeBuildProject
              InputArtifacts:
                - Name: CfnSourceArtifact
              OutputArtifacts:
                - Name: CfnBuildArtifact
              RunOrder: 1

        - Fn::If:
          - UseStagingCondition
          - Name: Staging
            Actions:
              - Name: CreateStagingStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  ActionMode: REPLACE_ON_FAILURE
                  RoleArn:
                    Fn::If:
                      - 'CreateExecutionRoleCondition'
                      - !GetAtt CloudFormationExecutionRole.Arn
                      - !Ref CfnExecutionRoleArn
                  Capabilities: CAPABILITY_NAMED_IAM
                  StackName:
                    Fn::Sub: "${CfnStackName}-Staging"
                  TemplateConfiguration:
                    Fn::Sub: "CfnBuildArtifact::config.test.json"
                  TemplatePath: "CfnBuildArtifact::Packaged.Master.template"
                InputArtifacts:
                  - Name: CfnBuildArtifact
                RunOrder: 1

              - Name: Approval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                Configuration:
                  NotificationArn: !Ref ApprovalTopic
                  CustomData:
                    Fn::Sub: "Please approve staging environment ${CfnStackName}-Staging"
                RunOrder: 2

              - Name: DeleteStagingStack
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  ActionMode: DELETE_ONLY
                  RoleArn:
                    Fn::If:
                      - 'CreateExecutionRoleCondition'
                      - !GetAtt CloudFormationExecutionRole.Arn
                      - !Ref CfnExecutionRoleArn
                  StackName:
                    Fn::Sub: "${CfnStackName}-Staging"
                OutputArtifacts:
                  - Name: ProceedToProduction
                RunOrder: 3
          - !Ref 'AWS::NoValue'

        - Name: Production
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName:
                  Fn::Sub: "${CfnStackName}-ChangeSet"
                RoleArn:
                  Fn::If:
                    - 'CreateExecutionRoleCondition'
                    - !GetAtt CloudFormationExecutionRole.Arn
                    - !Ref CfnExecutionRoleArn
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: "${CfnStackName}"
                TemplateConfiguration:
                  Fn::Sub: "CfnBuildArtifact::config.prod.json"
                TemplatePath: "CfnBuildArtifact::Packaged.Master.template"
              InputArtifacts:
                - Name: CfnBuildArtifact
                - Fn::If:
                  - UseStagingCondition
                  - Name: ProceedToProduction
                  - !Ref 'AWS::NoValue'
              OutputArtifacts:
                - Name: CfnChangeSetArtifact
              RunOrder: 1

            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                NotificationArn: !Ref ApprovalTopic
                CustomData:
                  Fn::Sub: "Please approve change set ${CfnStackName}-ChangeSet"
              RunOrder: 2

            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName:
                  Fn::Sub: "${CfnStackName}-ChangeSet"
                StackName:
                  Fn::Sub: "${CfnStackName}"
              InputArtifacts:
                - Name: CfnChangeSetArtifact
              RunOrder: 3

  CodeCommitEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: events.amazonaws.com
              Action:
                - sts:AssumeRole
      Policies:
        -
          PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - codepipeline:StartPipelineExecution
                Effect: Allow
                Resource:
                  - Fn::Sub:
                    - "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${PipelineName}"
                    - PipelineName: !Ref Pipeline


  CodeCommitEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - "aws.codecommit"
        detail-type:
          - "CodeCommit Repository State Change"
        resources:
          - Fn::GetAtt: CodeRepository.Arn
        detail:
          referenceType:
            - "branch"
          referenceName:
            - "master"
      State: "ENABLED"
      Targets:
        - Id: "CodePipelineTarget"
          Arn:
            Fn::Sub:
              - "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${PipelineName}"
              - PipelineName: !Ref Pipeline
          RoleArn:
            Fn::GetAtt: CodeCommitEventRole.Arn

