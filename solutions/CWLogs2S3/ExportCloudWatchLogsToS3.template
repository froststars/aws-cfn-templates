{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Export CloudWatch Logs to S3 on a schedule.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Export Configuration"
          },
          "Parameters": [
            "LogGroupName",
            "BucketStack",
            "ExportPrefix",
            "ExportStatus",
            "ExportInterval"
          ]
        }
      ],
      "ParameterLabels": {
        "BucketStack": {
          "default": "Bucket Stack"
        },
        "ExportInterval": {
          "default": "Export Interval"
        },
        "ExportPrefix": {
          "default": "Export Prefix"
        },
        "ExportStatus": {
          "default": "Export Status"
        },
        "LogGroupName": {
          "default": "Log Group Name"
        }
      }
    }
  },
  "Parameters": {
    "BucketStack": {
      "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription": "must be a valid stack name.",
      "Default": "SampleStack",
      "Description": "Name of a stack exporting s3 bucket name",
      "MaxLength": 128,
      "MinLength": 1,
      "Type": "String"
    },
    "ExportInterval": {
      "AllowedValues": [
        "day",
        "week"
      ],
      "Default": "day",
      "Description": "Export interval",
      "Type": "String"
    },
    "ExportPrefix": {
      "Default": "exportedlogs",
      "Description": "S3 prefix of the export",
      "Type": "String"
    },
    "ExportStatus": {
      "AllowedValues": [
        "ENABLED",
        "DISABLED"
      ],
      "Default": "DISABLED",
      "Description": "Whether the schedule is enabled",
      "Type": "String"
    },
    "LogGroupName": {
      "Default": "Logs",
      "Description": "Name of the CloudWatch Logs LogGroup to export",
      "Type": "String"
    }
  },
  "Resources": {
    "EventsExecutionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::Sub": "events.amazonaws.com"
                  }
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "states:StartExecution"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Ref": "StateMachine"
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AllowCreateExportTask"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LambdaExecutionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateExportTask",
                    "logs:DescribeExportTasks"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AllowCreateExportTask"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "LambdaFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "from\t__future__\timport\tprint_function\n__author__='kotaimen'\n__date__='24/05/2017'\nimport\tdatetime,calendar\nimport\tos\nimport\tboto3,boto3.s3.transfer\ndef\tlambda_handler(event,context):\n\tprint('Received event id %s at %s'%(event['id'],event['time']))\n\tevent_time=datetime.datetime.strptime(event['time'],'%Y-%m-%dT%H:%M:%SZ')\n\tinterval=os.getenv('EXPORT_INTERVAL','week')\n\tif\tinterval=='day':\n\t\tdelta=datetime.timedelta(days=1)\n\telif\tinterval=='week':\n\t\tdelta=datetime.timedelta(weeks=1)\n\telse:\n\t\traise\tRuntimeError('Unknown interval.')\n\tto_time=datetime.date(year=event_time.year,month=event_time.month,day=event_time.day)\n\tfrom_time=to_time-delta\n\tprint('Export time range: %s ~ %s'%(from_time,to_time))\n\tsrc_loggroup=os.getenv('EXPORT_LOGGROUP')\n\tdst_bucket=os.getenv('EXPORT_DST_BUCKET')\n\tdst_prefix=os.getenv('EXPORT_DST_PREFIX')\n\ttask_id=export_logs(src_loggroup,dst_bucket,dst_prefix,from_time,to_time)\n\treturn{'TaskId':task_id}\ndef\tdate2exporttime(d):\n\treturn\tcalendar.timegm(d.timetuple())*1000\ndef\texport_logs(src_loggroup_name,dst_bucket,dst_prefix,from_time,to_time):\n\tclient=boto3.client('logs')\n\tprefix='%s/%s/%s'%(dst_prefix,src_loggroup_name,from_time)\n\ttask_name='Export Task of %s during %s~%s'%(src_loggroup_name,from_time,to_time)\n\tprint('Submitting task %s'%task_name)\n\tresponse=client.create_export_task(taskName=task_name,logGroupName=src_loggroup_name,fromTime=date2exporttime(from_time),to=date2exporttime(to_time),destination=dst_bucket,destinationPrefix=prefix)\n\tprint('Submitted export task id %s'%response['taskId'])\n\treturn\tresponse['taskId']\n"
        },
        "Description": "Extract zip file contents to S3",
        "Environment": {
          "Variables": {
            "EXPORT_DST_BUCKET": {
              "Fn::ImportValue": {
                "Fn::Sub": "${BucketStack}-BucketName"
              }
            },
            "EXPORT_DST_PREFIX": {
              "Ref": "ExportPrefix"
            },
            "EXPORT_INTERVAL": {
              "Ref": "ExportInterval"
            },
            "EXPORT_LOGGROUP": {
              "Ref": "LogGroupName"
            }
          }
        },
        "Handler": "index.lambda_handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": "15"
      },
      "Type": "AWS::Lambda::Function"
    },
    "StateMachine": {
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\n        \"Comment\": \"A Retry example of the Amazon States Language using an AWS Lambda Function\",\n        \"StartAt\": \"CreateExportTask\",\n        \"States\": {\n            \"CreateExportTask\": {\n                \"Type\": \"Task\",\n                \"Resource\": \"${EXPORT_LAMBDA_FUNCTION}\",\n                \"Retry\": [\n                    {\n                        \"ErrorEquals\": [ \"States.Timeout\" ],\n                        \"MaxAttempts\": 0\n                    },\n                    {\n                        \"ErrorEquals\": [ \"States.ALL\" ],\n                        \"IntervalSeconds\": 30,\n                        \"MaxAttempts\": 10,\n                        \"BackoffRate\": 2.0\n                    }\n                ],\n                \"End\": true\n            }\n        }\n    }",
            {
              "EXPORT_LAMBDA_FUNCTION": {
                "Fn::GetAtt": [
                  "LambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StatesExecutionRole",
            "Arn"
          ]
        }
      },
      "Type": "AWS::StepFunctions::StateMachine"
    },
    "StatesExecutionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                  }
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "LambdaFunction",
                        "Arn"
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AllowCreateExportTask"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}