AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFront distribution points to a static s3 website

Parameters:

  OriginAccessIdentity:
    Type: String
    Description: ID of the Cloudfront Origin Access Identity
    AllowedPattern: '[A-Z0-9]+'

  CertificateArn:
    Type: String
    Default: ''
    Description: ARN of IAM/ACM certificate, leave this blank to disable custom certificate (SNI) on CloudFront

  DefaultRootObject:
    Type: String
    Default: 'index.html'
    Description: Default root object for the CloudFront distribution, this is usually default page of the website.

  DomainName:
    AllowedPattern: '[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*'
    ConstraintDescription: Must be a valid subdomain name
    Default: www
    Description: Domain name of the endpoint, without domain apex.
    MaxLength: 64
    MinLength: 1
    Type: String

  HostedZoneName:
    AllowedPattern: '[a-zA-Z0-9-]+\.[a-zA-Z]{2,}'
    ConstraintDescription: Must be a valid domain apex
    Default: sample.com
    Description: Route 53 hosted zone name (domain apex).
    MaxLength: 65
    MinLength: 3
    Type: String

Conditions:
  UseCertificateCondition: !Not
    - !Equals
      - !Ref 'CertificateArn'
      - ''


Resources:

  WebsiteBucket:
#    DeletionPolicy: Retain
    Type: AWS::S3::Bucket

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: WebsiteBucket
    Properties:
      Bucket: !Ref 'WebsiteBucket'
      PolicyDocument:
        Version: '2012-10-17'
        Id: CloudFrontAccessPolicy
        Statement:
          - Sid: '1'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}'
            Action: s3:GetObject
            Resource: !Join
              - '/'
              - - !GetAtt WebsiteBucket.Arn
                - '*'

  LogBucket:
    Type: AWS::S3::Bucket

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
#        Aliases:
#          - !Sub '${DomainName}.${HostedZoneName}'
        Comment: !Sub '${AWS::Region} ${AWS::StackName}'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: S3-WEBSITE
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: !Ref DefaultRootObject
        Enabled: true
        HttpVersion: http2
        Logging:
          Bucket: !Ref 'LogBucket'
          Prefix: !Ref ''
        Origins:
          - DomainName: !GetAtt WebsiteBucket.DomainName
            Id: S3-WEBSITE
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}

        PriceClass: PriceClass_All


        ViewerCertificate: !If
          - UseCertificateCondition
          -
            SslSupportMethod: sni-only
            AcmCertificateArn: !Ref CertificateArn
          - !Ref AWS::NoValue

#  Route53Record:
#    Type: AWS::Route53::RecordSet
#    Properties:
#      AliasTarget:
#        DNSName: !GetAtt 'StonemasonWebsiteDistribution.DomainName'
#        HostedZoneId: Z2FDTNDATAQYW2
#      HostedZoneName: !Sub '${HostedZoneName}.'
#      Name: !Sub '${DomainName}.${HostedZoneName}.'
#      Type: A

#
Outputs:
  DistributionID:
    Description: CloudFront distribution ID
    Value: !Ref 'WebsiteDistribution'
#  Endpoint:
#    Description: DNS endpoint
#    Export:
#      Name: !Sub '${AWS::StackName}-Endpoint'
#    Value: !Ref 'Route53Record'