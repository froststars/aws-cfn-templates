AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  CreateSecurityGroupCondition: !Equals [!Ref 'SecurityGroup', '']
  DefaultKmsCondition: !Equals [!Ref 'KmsKeyId', '']
  FiveSubnetsCondition: !Or [!Equals [!Ref 'NumberOfSubnets', '5'], !Equals [!Ref 'NumberOfSubnets',
      '6']]
  FourSubnetsCondition: !Or [!Equals [!Ref 'NumberOfSubnets', '4'], !Equals [!Ref 'NumberOfSubnets',
      '5'], !Equals [!Ref 'NumberOfSubnets', '6']]
  SixSubnetsCondition: !Equals [!Ref 'NumberOfSubnets', '6']
  StorageEncryptedCondition: !Equals [!Ref 'Encrypted', 'true']
  ThreeSubnetsCondition: !Or [!Equals [!Ref 'NumberOfSubnets', '3'], !Equals [!Ref 'NumberOfSubnets',
      '4'], !Equals [!Ref 'NumberOfSubnets', '5'], !Equals [!Ref 'NumberOfSubnets',
      '6']]
  TwoSubnetsCondition: !Or [!Equals [!Ref 'NumberOfSubnets', '2'], !Equals [!Ref 'NumberOfSubnets',
      '3'], !Equals [!Ref 'NumberOfSubnets', '4'], !Equals [!Ref 'NumberOfSubnets',
      '5'], !Equals [!Ref 'NumberOfSubnets', '6']]
Description: Simple Elastic File System
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VpcId
      - SubnetIds
      - NumberOfSubnets
      - SecurityGroup
    - Label:
        default: Filesystem Configuration
      Parameters:
      - PerformanceMode
    - Label:
        default: Security Configuration
      Parameters:
      - Encrypted
      - KmsKeyId
    ParameterLabels:
      Encrypted:
        default: Encrypted
      KmsKeyId:
        default: Kms Key Id
      NumberOfSubnets:
        default: Number Of Subnets
      PerformanceMode:
        default: Performance Mode
      SecurityGroup:
        default: Security Group
      SubnetIds:
        default: Subnet Ids
      VpcId:
        default: Vpc Id
Outputs:
  ElasticFileSystem:
    Description: ElasticFileSystem
    Value: !Ref 'FileSystem'
  MountPoint:
    Description: EFS mount point
    Value: !Sub '${FileSystem}.efs.${AWS::Region}.amazonaws.com'
  MountTarget1:
    Description: MountTarget1
    Value: !Ref 'MountTarget1'
  MountTargetSecurityGroup:
    Condition: CreateSecurityGroupCondition
    Description: MountTargetSecurityGroup
    Value: !Ref 'EfsSecurityGroup'
Parameters:
  Encrypted:
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'false'
    Description: Indicates whether the file system is encrypted.
    Type: String
  KmsKeyId:
    Default: ''
    Description: The ARN of the KMS master key that is used to encrypt the file system,
      If you enable the Encrypted property but don't specify this property, this template
      uses service default master key.
    Type: String
  NumberOfSubnets:
    Default: 2
    Description: Number of subnets in SubnetIds parameter
    MaxValue: 6
    MinValue: 1
    Type: Number
  PerformanceMode:
    AllowedValues:
    - generalPurpose
    - maxIO
    Default: generalPurpose
    Description: Performance mode of the file system.
    Type: String
  SecurityGroup:
    Default: ''
    Description: Mount target security group id, a new security group will be created
      this is left empty.
    Type: String
  SubnetIds:
    Description: 'SubnetIds of existing subnets of the VPC where mount target will
      be created.  Note: for each file system, you can create only one mount target
      per AZ.'
    Type: List<AWS::EC2::Subnet::Id>
  VpcId:
    Description: VpcId of an existing VPC.
    Type: AWS::EC2::VPC::Id
Resources:
  EfsSecurityGroup:
    Condition: CreateSecurityGroupCondition
    Properties:
      GroupDescription: Enable local postgres access
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: '2049'
        IpProtocol: tcp
        ToPort: '2049'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  FileSystem:
    Properties:
      Encrypted: !Ref 'Encrypted'
      KmsKeyId: !If [StorageEncryptedCondition, !If [DefaultKmsCondition, !Ref 'AWS::NoValue',
          !Ref 'KmsKeyId'], !Ref 'AWS::NoValue']
      PerformanceMode: !Ref 'PerformanceMode'
    Type: AWS::EFS::FileSystem
  MountTarget1:
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [0, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
  MountTarget2:
    Condition: TwoSubnetsCondition
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [1, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
  MountTarget3:
    Condition: ThreeSubnetsCondition
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [2, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
  MountTarget4:
    Condition: FourSubnetsCondition
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [3, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
  MountTarget5:
    Condition: FiveSubnetsCondition
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [4, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
  MountTarget6:
    Condition: SixSubnetsCondition
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SecurityGroups:
      - !If [CreateSecurityGroupCondition, !Ref 'EfsSecurityGroup', !Ref 'SecurityGroup']
      SubnetId: !Select [5, !Ref 'SubnetIds']
    Type: AWS::EFS::MountTarget
