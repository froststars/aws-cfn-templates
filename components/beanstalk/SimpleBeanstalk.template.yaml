AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  HttpsCertificateCondition: !Not [!Equals [!Ref 'Certificate', '']]
  InternalLoadBalancerCondition: !Equals [!Ref 'LoadBalancerVisibility', internal]
Description: Simple Beanstalk WebServer application using application load balancer
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VpcId
      - PublicSubnet1
      - PublicSubnet2
      - PrivateSubnet1
      - PrivateSubnet2
      - LoadBalancerVisibility
    - Label:
        default: Security & Role
      Parameters:
      - LoadBalancerSecurityGroup
      - InstanceSecurityGroup
      - ServiceRole
      - InstanceProfile
    - Label:
        default: Beanstalk Configuration
      Parameters:
      - SolutionStackName
      - SourceBucket
      - SourceBundle
      - Certificate
      - InstanceType
      - HealthCheckUrl
      - MinInstances
      - MaxInstances
      - LogRetention
    ParameterLabels:
      Certificate:
        default: Certificate
      HealthCheckUrl:
        default: Health Check Url
      InstanceProfile:
        default: Instance Profile
      InstanceSecurityGroup:
        default: Instance Security Group
      InstanceType:
        default: Instance Type
      LoadBalancerSecurityGroup:
        default: Load Balancer Security Group
      LoadBalancerVisibility:
        default: Load Balancer Visibility
      LogRetention:
        default: Log Retention
      MaxInstances:
        default: Max Instances
      MinInstances:
        default: Min Instances
      PrivateSubnet1:
        default: Private Subnet1
      PrivateSubnet2:
        default: Private Subnet2
      PublicSubnet1:
        default: Public Subnet1
      PublicSubnet2:
        default: Public Subnet2
      ServiceRole:
        default: Service Role
      SolutionStackName:
        default: Solution Stack Name
      SourceBucket:
        default: Source Bucket
      SourceBundle:
        default: Source Bundle
      VpcId:
        default: Vpc Id
Outputs:
  Application:
    Description: ElasticBeanstalk application
    Value: !Ref 'Application'
  EndpointURL:
    Description: ElasticBeanstalk environment endpoint url
    Value: !GetAtt 'Environment.EndpointURL'
  Environment:
    Description: ElasticBeanstalk environment name
    Value: !Ref 'Environment'
Parameters:
  Certificate:
    Default: ''
    Description: ARN of IAM or ACM certificate to bind to LB
    Type: String
  HealthCheckUrl:
    Default: /
    Description: Health check URL
    Type: String
  InstanceProfile:
    Description: EC2 instance profile ARN
    Type: String
  InstanceSecurityGroup:
    Description: InstanceSecurityGroup
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - x1.16xlarge
    - x1.32xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: EC2 instance type
    Type: String
  LoadBalancerSecurityGroup:
    Description: Load balancer security group
    Type: AWS::EC2::SecurityGroup::Id
  LoadBalancerVisibility:
    AllowedValues:
    - public
    - internal
    Default: public
    Description: Load balancer visibility
    Type: String
  LogRetention:
    AllowedValues:
    - -1
    - 1
    - 3
    - 5
    - 7
    - 14
    - 30
    - 60
    - 90
    - 120
    - 150
    - 180
    - 365
    - 400
    - 545
    - 731
    - 1827
    - 3653
    Default: '30'
    Description: The number of days log events are kept in CloudWatch Logs.
    Type: Number
  MaxInstances:
    Default: '2'
    Description: Max number of instances
    MinValue: '1'
    Type: Number
  MinInstances:
    Default: '1'
    Description: Minimum number of instances
    MinValue: '1'
    Type: Number
  PrivateSubnet1:
    Description: Private subnet 1 ID
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: Private subnet 2 ID
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1:
    Description: Public subnet 1 ID
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Description: Public subnet 2 ID
    Type: AWS::EC2::Subnet::Id
  ServiceRole:
    Description: Beanstalk service role ARN
    Type: String
  SolutionStackName:
    ConstraintDescription: must be a valid stack name.
    Default: ''
    Description: 'Elastic beans tack '
    MaxLength: 128
    MinLength: 0
    Type: String
  SourceBucket:
    Default: Bucket
    Description: Application source bundle bucket
    MinLength: 1
    Type: String
  SourceBundle:
    Default: app.zip
    Description: Application source bundle prefix
    MinLength: 1
    Type: String
  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
Resources:
  Application:
    Properties:
      Description: !Sub 'Stack=${AWS::StackName}'
    Type: AWS::ElasticBeanstalk::Application
  Environment:
    Properties:
      ApplicationName: !Ref 'Application'
      Description: Environment
      OptionSettings: []
      TemplateName: !Ref 'Template'
      Tier:
        Name: WebServer
        Type: Standard
      VersionLabel: !Ref 'Version'
    Type: AWS::ElasticBeanstalk::Environment
  Template:
    Properties:
      ApplicationName: !Ref 'Application'
      OptionSettings:
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: ServiceRole
        Value: !Ref 'ServiceRole'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: application
      - Namespace: aws:ec2:vpc
        OptionName: VPCId
        Value: !Ref 'VpcId'
      - Namespace: aws:ec2:vpc
        OptionName: ELBSubnets
        Value: !If [InternalLoadBalancerCondition, !Sub '${PrivateSubnet1},${PrivateSubnet2}',
          !Sub '${PublicSubnet1},${PublicSubnet2}']
      - Namespace: aws:ec2:vpc
        OptionName: Subnets
        Value: !Sub '${PrivateSubnet1},${PrivateSubnet2}'
      - Namespace: aws:ec2:vpc
        OptionName: AssociatePublicIpAddress
        Value: 'false'
      - Namespace: aws:ec2:vpc
        OptionName: ELBScheme
        Value: !If [InternalLoadBalancerCondition, internal, !Ref 'AWS::NoValue']
      - Namespace: aws:elasticbeanstalk:application
        OptionName: Application Healthcheck URL
        Value: !Ref 'HealthCheckUrl'
      - Namespace: aws:elasticbeanstalk:healthreporting:system
        OptionName: SystemType
        Value: enhanced
      - Namespace: aws:autoscaling:asg
        OptionName: Availability Zones
        Value: Any 2
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: !Ref 'MinInstances'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: !Ref 'MaxInstances'
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !Ref 'InstanceProfile'
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SecurityGroups
        Value: !Ref 'InstanceSecurityGroup'
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: !Ref 'InstanceType'
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: MonitoringInterval
        Value: 1 minute
      - Namespace: aws:autoscaling:trigger
        OptionName: MeasureName
        Value: CPUUtilization
      - Namespace: aws:autoscaling:trigger
        OptionName: Statistic
        Value: Average
      - Namespace: aws:autoscaling:trigger
        OptionName: Unit
        Value: Percent
      - Namespace: aws:autoscaling:trigger
        OptionName: LowerThreshold
        Value: '25'
      - Namespace: aws:autoscaling:trigger
        OptionName: UpperThreshold
        Value: '75'
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: RollingUpdateEnabled
        Value: 'true'
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: RollingUpdateType
        Value: Health
      - Namespace: aws:elasticbeanstalk:environment:process:default
        OptionName: HealthCheckPath
        Value: !Ref 'HealthCheckUrl'
      - Namespace: aws:elbv2:listener:default
        OptionName: ListenerEnabled
        Value: 'true'
      - Namespace: aws:elbv2:listener:443
        OptionName: ListenerEnabled
        Value: !If [HttpsCertificateCondition, 'true', 'false']
      - Namespace: aws:elbv2:listener:443
        OptionName: Protocol
        Value: HTTPS
      - Namespace: aws:elbv2:listener:443
        OptionName: SSLCertificateArns
        Value: !Ref 'Certificate'
      - Namespace: aws:elbv2:loadbalancer
        OptionName: ManagedSecurityGroup
        Value: !Ref 'LoadBalancerSecurityGroup'
      - Namespace: aws:elbv2:loadbalancer
        OptionName: SecurityGroups
        Value: !Ref 'LoadBalancerSecurityGroup'
      - Namespace: aws:elasticbeanstalk:hostmanager
        OptionName: LogPublicationControl
        Value: 'false'
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: StreamLogs
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: DeleteOnTerminate
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: RetentionInDays
        Value: !Ref 'LogRetention'
      - Namespace: aws:elasticbeanstalk:command
        OptionName: DeploymentPolicy
        Value: Rolling
      - Namespace: aws:elasticbeanstalk:command
        OptionName: Timeout
        Value: '600'
      - Namespace: aws:elasticbeanstalk:command
        OptionName: BatchSizeType
        Value: Percentage
      - Namespace: aws:elasticbeanstalk:command
        OptionName: BatchSize
        Value: '33'
      - Namespace: aws:elasticbeanstalk:managedactions
        OptionName: ManagedActionsEnabled
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:managedactions
        OptionName: PreferredStartTime
        Value: Sat:10:00
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: UpdateLevel
        Value: minor
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: InstanceRefreshEnabled
        Value: 'false'
      SolutionStackName: !Ref 'SolutionStackName'
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
  Version:
    Properties:
      ApplicationName: !Ref 'Application'
      Description: Version specified in cfn template.
      SourceBundle:
        S3Bucket: !Ref 'SourceBucket'
        S3Key: !Ref 'SourceBundle'
    Type: AWS::ElasticBeanstalk::ApplicationVersion
