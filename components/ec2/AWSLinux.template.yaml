{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "AllocateElasticIpCondition": {
      "Fn::Equals": [
        {
          "Ref": "AllocateElasticIp"
        },
        "true"
      ]
    },
    "ChinaRegionCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "cn-north-1"
      ]
    },
    "CreateInstanceProfileCondition": {
      "Fn::Equals": [
        {
          "Ref": "InstanceProfileArn"
        },
        ""
      ]
    },
    "CreateSecurityGroupCondition": {
      "Fn::Equals": [
        {
          "Ref": "InstanceSecurityGroupId"
        },
        ""
      ]
    },
    "DefaultEbsOptimizationCondition": {
      "Fn::Equals": [
        {
          "Ref": "EbsOptimized"
        },
        "default"
      ]
    },
    "PublicIpCondition": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AssociatePublicIp"
            },
            "true"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AllocateElasticIp"
            },
            "true"
          ]
        }
      ]
    },
    "Volume1Condition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Volume1Size"
            },
            "0"
          ]
        }
      ]
    },
    "Volume1IopsOptimizedCondition": {
      "Fn::Equals": [
        {
          "Ref": "Volume1Type"
        },
        "io1"
      ]
    },
    "VolumeEncryptedCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "VolumeEncryptionKey"
            },
            ""
          ]
        }
      ]
    }
  },
  "Description": "An Amazon EC2 instance running Amazon Linux 2017.09, supported options include optional security groups and instance roles, ssh access and instance volume.  This templates also works in China region. ",
  "Mappings": {
    "AWSInstanceType2Arch": {
      "c1.medium": {
        "Arch": "PV64"
      },
      "c1.xlarge": {
        "Arch": "PV64"
      },
      "c3.2xlarge": {
        "Arch": "HVM64"
      },
      "c3.4xlarge": {
        "Arch": "HVM64"
      },
      "c3.8xlarge": {
        "Arch": "HVM64"
      },
      "c3.large": {
        "Arch": "HVM64"
      },
      "c3.xlarge": {
        "Arch": "HVM64"
      },
      "c4.2xlarge": {
        "Arch": "HVM64"
      },
      "c4.4xlarge": {
        "Arch": "HVM64"
      },
      "c4.8xlarge": {
        "Arch": "HVM64"
      },
      "c4.large": {
        "Arch": "HVM64"
      },
      "c4.xlarge": {
        "Arch": "HVM64"
      },
      "cc2.8xlarge": {
        "Arch": "HVM64"
      },
      "cr1.8xlarge": {
        "Arch": "HVM64"
      },
      "d2.2xlarge": {
        "Arch": "HVM64"
      },
      "d2.4xlarge": {
        "Arch": "HVM64"
      },
      "d2.8xlarge": {
        "Arch": "HVM64"
      },
      "d2.xlarge": {
        "Arch": "HVM64"
      },
      "g2.2xlarge": {
        "Arch": "HVM64"
      },
      "g2.8xlarge": {
        "Arch": "HVM64"
      },
      "g3.16xlarge": {
        "Arch": "HVM64"
      },
      "g3.4xlarge": {
        "Arch": "HVM64"
      },
      "g3.8xlarge": {
        "Arch": "HVM64"
      },
      "hi1.4xlarge": {
        "Arch": "HVM64"
      },
      "hs1.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.2xlarge": {
        "Arch": "HVM64"
      },
      "i2.4xlarge": {
        "Arch": "HVM64"
      },
      "i2.8xlarge": {
        "Arch": "HVM64"
      },
      "i2.xlarge": {
        "Arch": "HVM64"
      },
      "i3.16xlarge": {
        "Arch": "HVM64"
      },
      "i3.2xlarge": {
        "Arch": "HVM64"
      },
      "i3.4xlarge": {
        "Arch": "HVM64"
      },
      "i3.8xlarge": {
        "Arch": "HVM64"
      },
      "i3.large": {
        "Arch": "HVM64"
      },
      "i3.xlarge": {
        "Arch": "HVM64"
      },
      "m1.large": {
        "Arch": "PV64"
      },
      "m1.medium": {
        "Arch": "PV64"
      },
      "m1.small": {
        "Arch": "PV64"
      },
      "m1.xlarge": {
        "Arch": "PV64"
      },
      "m2.2xlarge": {
        "Arch": "PV64"
      },
      "m2.4xlarge": {
        "Arch": "PV64"
      },
      "m2.xlarge": {
        "Arch": "PV64"
      },
      "m3.2xlarge": {
        "Arch": "HVM64"
      },
      "m3.large": {
        "Arch": "HVM64"
      },
      "m3.medium": {
        "Arch": "HVM64"
      },
      "m3.xlarge": {
        "Arch": "HVM64"
      },
      "m4.10xlarge": {
        "Arch": "HVM64"
      },
      "m4.16xlarge": {
        "Arch": "HVM64"
      },
      "m4.2xlarge": {
        "Arch": "HVM64"
      },
      "m4.4xlarge": {
        "Arch": "HVM64"
      },
      "m4.large": {
        "Arch": "HVM64"
      },
      "m4.xlarge": {
        "Arch": "HVM64"
      },
      "p2.16xlarge": {
        "Arch": "HVM64"
      },
      "p2.8xlarge": {
        "Arch": "HVM64"
      },
      "p2.xlarge": {
        "Arch": "HVM64"
      },
      "r3.2xlarge": {
        "Arch": "HVM64"
      },
      "r3.4xlarge": {
        "Arch": "HVM64"
      },
      "r3.8xlarge": {
        "Arch": "HVM64"
      },
      "r3.large": {
        "Arch": "HVM64"
      },
      "r3.xlarge": {
        "Arch": "HVM64"
      },
      "r4.16xlarge": {
        "Arch": "HVM64"
      },
      "r4.2xlarge": {
        "Arch": "HVM64"
      },
      "r4.4xlarge": {
        "Arch": "HVM64"
      },
      "r4.8xlarge": {
        "Arch": "HVM64"
      },
      "r4.large": {
        "Arch": "HVM64"
      },
      "r4.xlarge": {
        "Arch": "HVM64"
      },
      "t1.micro": {
        "Arch": "PV64"
      },
      "t2.2xlarge": {
        "Arch": "HVM64"
      },
      "t2.large": {
        "Arch": "HVM64"
      },
      "t2.medium": {
        "Arch": "HVM64"
      },
      "t2.micro": {
        "Arch": "HVM64"
      },
      "t2.nano": {
        "Arch": "HVM64"
      },
      "t2.small": {
        "Arch": "HVM64"
      },
      "t2.xlarge": {
        "Arch": "HVM64"
      },
      "x1.16xlarge": {
        "Arch": "HVM64"
      },
      "x1.32xlarge": {
        "Arch": "HVM64"
      },
      "x1e.32xlarge": {
        "Arch": "HVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "HVM64": "ami-2a69be4c",
        "PV64": "ami-05964063"
      },
      "ap-northeast-2": {
        "HVM64": "ami-9bec36f5",
        "PV64": "n/a"
      },
      "ap-south-1": {
        "HVM64": "ami-4fc58420",
        "PV64": "n/a"
      },
      "ap-southeast-1": {
        "HVM64": "ami-0797ea64",
        "PV64": "ami-5a91ec39"
      },
      "ap-southeast-2": {
        "HVM64": "ami-8536d6e7",
        "PV64": "ami-f137d793"
      },
      "ca-central-1": {
        "HVM64": "ami-fd55ec99",
        "PV64": "n/a"
      },
      "cn-north-1": {
        "HVM64": "ami-fba67596",
        "PV64": "ami-04a57669"
      },
      "eu-central-1": {
        "HVM64": "ami-c7ee5ca8",
        "PV64": "ami-66ec5e09"
      },
      "eu-west-1": {
        "HVM64": "ami-acd005d5",
        "PV64": "ami-07df0a7e"
      },
      "eu-west-2": {
        "HVM64": "ami-1a7f6d7e",
        "PV64": "n/a"
      },
      "sa-east-1": {
        "HVM64": "ami-f1344b9d",
        "PV64": "ami-b4344bd8"
      },
      "us-east-1": {
        "HVM64": "ami-8c1be5f6",
        "PV64": "ami-fe16e884"
      },
      "us-east-2": {
        "HVM64": "ami-c5062ba0",
        "PV64": "n/a"
      },
      "us-gov-1": {
        "HVM64": "ami-6e9c1e0f",
        "PV64": "ami-139c1e72"
      },
      "us-west-1": {
        "HVM64": "ami-02eada62",
        "PV64": "ami-fce9d99c"
      },
      "us-west-2": {
        "HVM64": "ami-e689729e",
        "PV64": "ami-e389729b"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VpcId",
            "SubnetId",
            "AllocateElasticIp",
            "AssociatePublicIp"
          ]
        },
        {
          "Label": {
            "default": "Instance Configuration"
          },
          "Parameters": [
            "KeyName",
            "InstanceType",
            "DetailedMonitoring",
            "InstanceSecurityGroupId",
            "InstanceProfileArn"
          ]
        },
        {
          "Label": {
            "default": "EBS Volume Configuration"
          },
          "Parameters": [
            "EbsOptimized",
            "Volume1Size",
            "Volume1Type",
            "Volume1Iops",
            "Volume1Device",
            "VolumeEncryptionKey"
          ]
        },
        {
          "Label": {
            "default": "Security & Log Configuration"
          },
          "Parameters": [
            "SshLocation",
            "LogGroupName"
          ]
        }
      ],
      "ParameterLabels": {
        "AllocateElasticIp": {
          "default": "Allocate Elastic Ip"
        },
        "AssociatePublicIp": {
          "default": "Associate Public Ip"
        },
        "DetailedMonitoring": {
          "default": "Detailed Monitoring"
        },
        "EbsOptimized": {
          "default": "Ebs Optimized"
        },
        "InstanceProfileArn": {
          "default": "Instance Profile Arn"
        },
        "InstanceSecurityGroupId": {
          "default": "Instance Security Group Id"
        },
        "InstanceType": {
          "default": "Instance Type"
        },
        "KeyName": {
          "default": "Key Name"
        },
        "LogGroupName": {
          "default": "Log Group Name"
        },
        "SshLocation": {
          "default": "Ssh Location"
        },
        "SubnetId": {
          "default": "Subnet Id"
        },
        "Volume1Device": {
          "default": "Volume1 Device"
        },
        "Volume1Iops": {
          "default": "Volume1 Iops"
        },
        "Volume1Size": {
          "default": "Volume1 Size"
        },
        "Volume1Type": {
          "default": "Volume1 Type"
        },
        "VolumeEncryptionKey": {
          "default": "Volume Encryption Key"
        },
        "VpcId": {
          "default": "Vpc Id"
        }
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "EC2 Instance Id",
      "Value": {
        "Ref": "AwsLinuxInstance"
      }
    },
    "PrivateIp": {
      "Description": "Instance private IP address",
      "Value": {
        "Fn::GetAtt": [
          "AwsLinuxInstance",
          "PrivateIp"
        ]
      }
    },
    "PublicIp": {
      "Condition": "PublicIpCondition",
      "Description": "Public IP address",
      "Value": {
        "Fn::GetAtt": [
          "AwsLinuxInstance",
          "PublicIp"
        ]
      }
    },
    "Volume1Id": {
      "Condition": "Volume1Condition",
      "Description": "Volume 1 Id",
      "Value": {
        "Ref": "Volume1"
      }
    }
  },
  "Parameters": {
    "AllocateElasticIp": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Allocate a ElasticIP and associate it to instance",
      "Type": "String"
    },
    "AssociatePublicIp": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "true",
      "Description": "Associate a public IP to instance, \"default\" means use subnet default setting, otherwise SSM and CloudWatchLogs won't initialize properly",
      "Type": "String"
    },
    "DetailedMonitoring": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false",
      "Description": "Whether uses detailed 1 minute monitoring interval, which requires additional charge",
      "Type": "String"
    },
    "EbsOptimized": {
      "AllowedValues": [
        "default",
        "true",
        "false"
      ],
      "Default": "default",
      "Description": "Whether instance is EBS optimized, default means use default value of selected instance type",
      "Type": "String"
    },
    "InstanceProfileArn": {
      "Default": "",
      "Description": "Arn of instance profile, a new instance role and instance profile will be created if this is left empty.",
      "Type": "String"
    },
    "InstanceSecurityGroupId": {
      "Default": "",
      "Description": "Instance security group id, a new security group will be created this is left empty.",
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "c1.medium",
        "c1.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c4.large",
        "c4.xlarge",
        "cc2.8xlarge",
        "cr1.8xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "d2.xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.16xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i2.xlarge",
        "i3.16xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.large",
        "i3.xlarge",
        "m1.large",
        "m1.medium",
        "m1.small",
        "m1.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m2.xlarge",
        "m3.2xlarge",
        "m3.large",
        "m3.medium",
        "m3.xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.large",
        "m4.xlarge",
        "p2.16xlarge",
        "p2.8xlarge",
        "p2.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r4.16xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.large",
        "r4.xlarge",
        "t1.micro",
        "t2.2xlarge",
        "t2.large",
        "t2.medium",
        "t2.micro",
        "t2.nano",
        "t2.small",
        "t2.xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "x1e.32xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type.",
      "Default": "t2.small",
      "Description": "EC2 instance type",
      "Type": "String"
    },
    "KeyName": {
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "LogGroupName": {
      "AllowedPattern": "[a-zA-Z0-9_\\-/]*",
      "ConstraintDescription": "log group must contain only following characters: a-zA-Z0-9_-/.",
      "Description": "CloudWatch Logs LogGroup name for the aws log agent to write to, the LogGroup is assumed to be in the same region as the stack, and will be created if it does not exist.",
      "MaxLength": "512",
      "MinLength": "1",
      "Type": "String"
    },
    "SshLocation": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x.",
      "Default": "0.0.0.0/0",
      "Description": "Lockdown SSH access to the EC2 instance (default can be accessed from anywhere)",
      "MaxLength": "18",
      "MinLength": "9",
      "Type": "String"
    },
    "SubnetId": {
      "ConstraintDescription": "must be an existing subnet id.",
      "Description": "SubnetId of an existing subnet in the VPC",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "Volume1Device": {
      "AllowedValues": [
        "/dev/xvdf",
        "/dev/xvdg",
        "/dev/xvdh",
        "/dev/xvdi",
        "/dev/xvdj",
        "/dev/xvdk",
        "/dev/xvdl",
        "/dev/xvdm",
        "/dev/xvdn",
        "/dev/xvdo",
        "/dev/xvdp"
      ],
      "Default": "/dev/xvdf",
      "Description": "Volume device name",
      "Type": "String"
    },
    "Volume1Iops": {
      "ConstraintDescription": "Range is 100 to 20000 for Provisioned IOPS SSD volumes, with a maximum ratio of 50 IOPS/GiB",
      "Default": "100",
      "Description": "IOPS the volume supports, used when the volume type is io1",
      "MaxValue": "20000",
      "MinValue": "100",
      "Type": "Number"
    },
    "Volume1Size": {
      "ConstraintDescription": "1-16384 for gp2, 4-16384 for io1, 500-16384 for st1,500-16384 for sc1, and 1-1024 for standard",
      "Default": "0",
      "Description": "Size of the EBS volume in GB, \"0\" disables volume creation",
      "MaxValue": "16384",
      "MinValue": "0",
      "Type": "Number"
    },
    "Volume1Type": {
      "AllowedValues": [
        "gp2",
        "io1",
        "st1",
        "sc1",
        "standard"
      ],
      "Default": "gp2",
      "Description": "EBS volume type",
      "Type": "String"
    },
    "VolumeEncryptionKey": {
      "Default": "",
      "Description": "KMS key arn of the volume for data encryption, leave blank means don't use volume SSE, please note previous generation instances and t2.* instances don't suport encrypted volumes",
      "Type": "String"
    },
    "VpcId": {
      "ConstraintDescription": "must be an existing vpc id.",
      "Description": "VpcId of an existing VPC",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Resources": {
    "AwsLinuxInstance": {
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT5M"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "ConfigCFNTools": {
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\ninterval=5\nverbose=false\n"
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.AwsLinuxInstance.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v    --stack ${AWS::StackName}    --resource AwsLinuxInstance    --configsets Update    --region ${AWS::Region}\nrunas=root\n"
                }
              }
            },
            "services": {
              "sysvinit": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "InstallAWSTools": {
            "commands": {},
            "files": {
              "/etc/awslogs/awscli.conf": {
                "content": {
                  "Fn::Sub": "[plugins]\ncwlogs = cwlogs\n[default]\nregion = ${AWS::Region}\n"
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              },
              "/etc/awslogs/awslogs.conf": {
                "content": {
                  "Fn::Sub": [
                    "[general]\nstate_file = /var/lib/awslogs/agent-state\n[/var/log/messages]\ndatetime_format = %b %d %H:%M:%S\nfile = /var/log/messages\nbuffer_duration = 5000\ninitial_position = start_of_file\nlog_group_name = ${LOG_GROUP_NAME}\nlog_stream_name = ${AWS::StackName}/{instance_id}/messages\n",
                    {
                      "LOG_GROUP_NAME": {
                        "Ref": "LogGroupName"
                      }
                    }
                  ]
                },
                "group": "root",
                "mode": "000400",
                "owner": "root"
              }
            },
            "packages": {
              "yum": {
                "aws-cli": [],
                "awslogs": []
              }
            },
            "services": {
              "sysvinit": {
                "awslogs": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/awslogs/awslogs.conf",
                    "/etc/awslogs/awscli.conf"
                  ]
                }
              }
            }
          },
          "InstallPackages": {},
          "configSets": {
            "Bootstrap": [
              "ConfigCFNTools",
              "InstallAWSTools",
              "InstallPackages"
            ],
            "Update": [
              "ConfigCFNTools",
              "InstallAWSTools",
              "InstallPackages"
            ]
          }
        }
      },
      "Properties": {
        "EbsOptimized": {
          "Fn::If": [
            "DefaultEbsOptimizationCondition",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "EbsOptimized"
            }
          ]
        },
        "IamInstanceProfile": {
          "Fn::If": [
            "CreateInstanceProfileCondition",
            {
              "Ref": "InstanceProfile"
            },
            {
              "Ref": "InstanceProfileArn"
            }
          ]
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "Monitoring": {
          "Ref": "DetailedMonitoring"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": {
              "Ref": "AssociatePublicIp"
            },
            "DeleteOnTermination": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Fn::If": [
                  "CreateSecurityGroupCondition",
                  {
                    "Ref": "SshSecurityGroup"
                  },
                  {
                    "Ref": "InstanceSecurityGroupId"
                  }
                ]
              }
            ],
            "SubnetId": {
              "Ref": "SubnetId"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash -xe\n# Update CloudFormation tools\nyum update -y aws-cfn-bootstrap\n\n# Run CloudFormation tools init\n/opt/aws/bin/cfn-init -v     --stack ${AWS::StackName}     --resource AwsLinuxInstance     --configsets Bootstrap     --region ${AWS::Region}\n    \n/opt/aws/bin/cfn-signal -e $?     --stack ${AWS::StackName}     --resource AwsLinuxInstance     --region ${AWS::Region}\n"
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "EIPAssociation": {
      "Condition": "AllocateElasticIpCondition",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "ElasticIP",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "AwsLinuxInstance"
        }
      },
      "Type": "AWS::EC2::EIPAssociation"
    },
    "ElasticIP": {
      "Condition": "AllocateElasticIpCondition",
      "DependsOn": "AwsLinuxInstance",
      "Properties": {
        "Domain": "vpc"
      },
      "Type": "AWS::EC2::EIP"
    },
    "InstanceProfile": {
      "Condition": "CreateInstanceProfileCondition",
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "InstanceRole": {
      "Condition": "CreateInstanceProfileCondition",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::If": [
                      "ChinaRegionCondition",
                      "ec2.amazonaws.com.cn",
                      "ec2.amazonaws.com"
                    ]
                  }
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:${PARTITION}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroupName}:*",
                        {
                          "PARTITION": {
                            "Fn::If": [
                              "ChinaRegionCondition",
                              "aws-cn",
                              "aws"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "AWSLogs"
          },
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DescribeAssociation",
                    "ssm:GetDocument",
                    "ssm:ListAssociations",
                    "ssm:UpdateAssociationStatus",
                    "ssm:UpdateInstanceInformation"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "ec2messages:AcknowledgeMessage",
                    "ec2messages:DeleteMessage",
                    "ec2messages:FailMessage",
                    "ec2messages:GetEndpoint",
                    "ec2messages:GetMessages",
                    "ec2messages:SendReply"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "ec2:DescribeInstanceStatus"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "ds:CreateComputer",
                    "ds:DescribeDirectories"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:AbortMultipartUpload",
                    "s3:ListMultipartUploadParts",
                    "s3:ListBucketMultipartUploads"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:${PARTITON}:s3:::aws-ssm-log-${AWS::Region}-${AWS::AccountId}/*",
                      {
                        "PARTITON": {
                          "Fn::If": [
                            "ChinaRegionCondition",
                            "aws-cn",
                            "aws"
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "Ec2SSM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "SshSecurityGroup": {
      "Condition": "CreateSecurityGroupCondition",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "SshLocation"
            },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "Volume1": {
      "Condition": "Volume1Condition",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "AwsLinuxInstance",
            "AvailabilityZone"
          ]
        },
        "Encrypted": {
          "Fn::If": [
            "VolumeEncryptedCondition",
            "true",
            "false"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Volume1IopsOptimizedCondition",
            {
              "Ref": "Volume1Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "KmsKeyId": {
          "Fn::If": [
            "VolumeEncryptedCondition",
            {
              "Ref": "VolumeEncryptionKey"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume1Size"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "VolumeType": {
          "Ref": "Volume1Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "Volume1Attachment": {
      "Condition": "Volume1Condition",
      "Properties": {
        "Device": {
          "Ref": "Volume1Device"
        },
        "InstanceId": {
          "Ref": "AwsLinuxInstance"
        },
        "VolumeId": {
          "Ref": "Volume1"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    }
  }
}