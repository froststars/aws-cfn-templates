AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  AllocateElasticIpCondition: !Equals
    - !Ref 'AllocateElasticIp'
    - 'true'
  CreateInstanceProfileCondition: !Equals
    - !Ref 'InstanceProfileArn'
    - ''
  CreateSecurityGroupCondition: !Equals
    - !Ref 'InstanceSecurityGroupId'
    - ''
  DefaultEbsOptimizationCondition: !Equals
    - !Ref 'EbsOptimized'
    - default
  PublicIpCondition: !Or
    - !Equals
      - !Ref 'AssociatePublicIp'
      - 'true'
    - !Equals
      - !Ref 'AllocateElasticIp'
      - 'true'
  SSMEnabledCondition: !Equals
    - !Ref 'EnableSsm'
    - 'true'
  Volume1Condition: !Not
    - !Equals
      - !Ref 'Volume1Size'
      - '0'
  Volume1IopsOptimizedCondition: !Equals
    - !Ref 'Volume1Type'
    - io1
  VolumeEncryptedCondition: !Not
    - !Equals
      - !Ref 'VolumeEncryptionKey'
      - ''
Description: EC2 instance running Amazon Linux
Mappings:
  AWSInstanceType2Arch:
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c4.16xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c5.18xlarge:
      Arch: HVM64
    c5.2xlarge:
      Arch: HVM64
    c5.4xlarge:
      Arch: HVM64
    c5.9xlarge:
      Arch: HVM64
    c5.large:
      Arch: HVM64
    c5.xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVM64
    g2.8xlarge:
      Arch: HVM64
    g3.16xlarge:
      Arch: HVM64
    g3.4xlarge:
      Arch: HVM64
    g3.8xlarge:
      Arch: HVM64
    h1.16xlarge:
      Arch: HVM64
    h1.2xlarge:
      Arch: HVM64
    h1.4xlarge:
      Arch: HVM64
    h1.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i3.16xlarge:
      Arch: HVM64
    i3.2xlarge:
      Arch: HVM64
    i3.4xlarge:
      Arch: HVM64
    i3.8xlarge:
      Arch: HVM64
    i3.large:
      Arch: HVM64
    i3.xlarge:
      Arch: HVM64
    m1.large:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.small:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m3.2xlarge:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    m4.16xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m5.12xlarge:
      Arch: HVM64
    m5.24xlarge:
      Arch: HVM64
    m5.2xlarge:
      Arch: HVM64
    m5.4xlarge:
      Arch: HVM64
    m5.large:
      Arch: HVM64
    m5.xlarge:
      Arch: HVM64
    p2.16xlarge:
      Arch: HVM64
    p2.8xlarge:
      Arch: HVM64
    p2.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r4.16xlarge:
      Arch: HVM64
    r4.2xlarge:
      Arch: HVM64
    r4.4xlarge:
      Arch: HVM64
    r4.8xlarge:
      Arch: HVM64
    r4.large:
      Arch: HVM64
    r4.xlarge:
      Arch: HVM64
    t1.micro:
      Arch: PV64
    t2.2xlarge:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.xlarge:
      Arch: HVM64
    x1.16xlarge:
      Arch: HVM64
    x1.32xlarge:
      Arch: HVM64
    x1e.32xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-ceafcba8
      PV64: ami-a5593dc3
    ap-northeast-2:
      HVM64: ami-863090e8
      PV64: n/a
    ap-south-1:
      HVM64: ami-531a4c3c
      PV64: n/a
    ap-southeast-1:
      HVM64: ami-68097514
      PV64: ami-360e724a
    ap-southeast-2:
      HVM64: ami-942dd1f6
      PV64: ami-922ed2f0
    ca-central-1:
      HVM64: ami-a954d1cd
      PV64: n/a
    cn-north-1:
      HVM64: ami-cb19c4a6
      PV64: ami-1818c575
    cn-northwest-1:
      HVM64: ami-3e60745c
      PV64: n/a
    eu-central-1:
      HVM64: ami-5652ce39
      PV64: ami-ba55c9d5
    eu-west-1:
      HVM64: ami-d834aba1
      PV64: ami-e539a69c
    eu-west-2:
      HVM64: ami-403e2524
      PV64: n/a
    eu-west-3:
      HVM64: ami-8ee056f3
      PV64: n/a
    sa-east-1:
      HVM64: ami-84175ae8
      PV64: ami-7c155810
    us-east-1:
      HVM64: ami-97785bed
      PV64: ami-c87053b2
    us-east-2:
      HVM64: ami-f63b1193
      PV64: n/a
    us-gov-1:
      HVM64: ami-56f87137
      PV64: ami-3ffa735e
    us-west-1:
      HVM64: ami-824c4ee2
      PV64: ami-d8494bb8
    us-west-2:
      HVM64: ami-f2d3638a
      PV64: ami-31d86849
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - SubnetId
          - AllocateElasticIp
          - AssociatePublicIp
      - Label:
          default: Instance Configuration
        Parameters:
          - KeyName
          - InstanceType
          - DetailedMonitoring
          - InstanceSecurityGroupId
          - InstanceProfileArn
      - Label:
          default: EBS Volume Configuration
        Parameters:
          - EbsOptimized
          - Volume1Size
          - Volume1Type
          - Volume1Iops
          - Volume1Device
          - VolumeEncryptionKey
      - Label:
          default: Other Configuration
        Parameters:
          - SshLocation
          - EnableSsm
    ParameterLabels:
      AllocateElasticIp:
        default: Allocate Elastic Ip
      AssociatePublicIp:
        default: Associate Public Ip
      DetailedMonitoring:
        default: Detailed Monitoring
      EbsOptimized:
        default: Ebs Optimized
      EnableSsm:
        default: Enable Ssm
      InstanceProfileArn:
        default: Instance Profile Arn
      InstanceSecurityGroupId:
        default: Instance Security Group Id
      InstanceType:
        default: Instance Type
      KeyName:
        default: Key Name
      SshLocation:
        default: Ssh Location
      SubnetId:
        default: Subnet Id
      Volume1Device:
        default: Volume1 Device
      Volume1Iops:
        default: Volume1 Iops
      Volume1Size:
        default: Volume1 Size
      Volume1Type:
        default: Volume1 Type
      VolumeEncryptionKey:
        default: Volume Encryption Key
      VpcId:
        default: Vpc Id
Outputs:
  InstanceId:
    Description: EC2 Instance Id
    Value: !Ref 'AWSLinuxInstance'
  PrivateIp:
    Description: Instance private IP address
    Value: !GetAtt 'AWSLinuxInstance.PrivateIp'
  PublicIp:
    Condition: PublicIpCondition
    Description: Public IP address
    Value: !GetAtt 'AWSLinuxInstance.PublicIp'
  Volume1Id:
    Condition: Volume1Condition
    Description: Volume 1 Id
    Value: !Ref 'Volume1'
Parameters:
  AllocateElasticIp:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Allocate a ElasticIP and associate it to instance
    Type: String
  AssociatePublicIp:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Associate a public IP to instance, "default" means use subnet default
      setting, otherwise SSM and CloudWatchLogs won't initialize properly
    Type: String
  DetailedMonitoring:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Whether uses detailed 1 minute monitoring interval, which requires
      additional charge
    Type: String
  EbsOptimized:
    AllowedValues:
      - default
      - 'true'
      - 'false'
    Default: default
    Description: Whether instance is EBS optimized, use default value of selected
      instance type when set to "default".
    Type: String
  EnableSsm:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: Enable Simple System Manager (installed by default)for Amazon Linux
      2019.10 and later
    Type: String
  InstanceProfileArn:
    Default: ''
    Description: Arn of instance profile, a new instance role and instance profile
      will be created if this is left empty.
    Type: String
  InstanceSecurityGroupId:
    Default: ''
    Description: Instance security group id, a new security group will be created
      if this is left empty.
    Type: String
  InstanceType:
    AllowedValues:
      - c1.medium
      - c1.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c3.large
      - c3.xlarge
      - c4.16xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c4.large
      - c4.xlarge
      - c5.18xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.large
      - c5.xlarge
      - cc2.8xlarge
      - cr1.8xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - d2.xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3.16xlarge
      - g3.4xlarge
      - g3.8xlarge
      - h1.16xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i2.xlarge
      - i3.16xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.large
      - i3.xlarge
      - m1.large
      - m1.medium
      - m1.small
      - m1.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m2.xlarge
      - m3.2xlarge
      - m3.large
      - m3.medium
      - m3.xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.large
      - m4.xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.large
      - m5.xlarge
      - p2.16xlarge
      - p2.8xlarge
      - p2.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r3.large
      - r3.xlarge
      - r4.16xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.large
      - r4.xlarge
      - t1.micro
      - t2.2xlarge
      - t2.large
      - t2.medium
      - t2.micro
      - t2.nano
      - t2.small
      - t2.xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.32xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
  SshLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: Lockdown SSH access to the EC2 instance (default can be accessed
      from anywhere)
    MaxLength: '18'
    MinLength: '9'
    Type: String
  SubnetId:
    ConstraintDescription: must be an existing subnet id.
    Description: SubnetId of an existing subnet in the VPC
    Type: AWS::EC2::Subnet::Id
  Volume1Device:
    AllowedValues:
      - /dev/xvdf
      - /dev/xvdg
      - /dev/xvdh
      - /dev/xvdi
      - /dev/xvdj
      - /dev/xvdk
      - /dev/xvdl
      - /dev/xvdm
      - /dev/xvdn
      - /dev/xvdo
      - /dev/xvdp
    Default: /dev/xvdf
    Description: Volume device name, note for m5/c5 instances, this will be renamed
      to /dev/nvmeXn1
    Type: String
  Volume1Iops:
    ConstraintDescription: Range is 100 to 20000 for Provisioned IOPS SSD volumes,
      with a maximum ratio of 50 IOPS/GiB
    Default: '100'
    Description: IOPS the volume supports, used when the volume type is io1
    MaxValue: '20000'
    MinValue: '100'
    Type: Number
  Volume1Size:
    ConstraintDescription: 1-16384 for gp2, 4-16384 for io1, 500-16384 for st1,500-16384
      for sc1, and 1-1024 for standard
    Default: '0'
    Description: 'Size of the EBS volume in GB, set to "0" disables volume creation '
    MaxValue: '16384'
    MinValue: '0'
    Type: Number
  Volume1Type:
    AllowedValues:
      - gp2
      - io1
      - st1
      - sc1
      - standard
    Default: gp2
    Description: EBS volume type
    Type: String
  VolumeEncryptionKey:
    Default: ''
    Description: KMS key arn of the volume for data encryption, leave blank means
      don't use volume SSE, please note previous generation instances and t2.* instances
      don't suport encrypted volumes
    Type: String
  VpcId:
    ConstraintDescription: must be an existing vpc id.
    Description: VpcId of an existing VPC
    Type: AWS::EC2::VPC::Id
Resources:
  AWSLinuxInstance:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Metadata:
      AWS::CloudFormation::Init:
        ConfigCFNTools:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\n\
                interval=5\nverbose=false\n"
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.AWSLinuxInstance.Metadata.AWS::CloudFormation::Init\n\
                action=/opt/aws/bin/cfn-init -v    --stack ${AWS::StackName}    --resource\
                \ AWSLinuxInstance    --configsets Update    --region ${AWS::Region}\n\
                runas=root\n"
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        configSets:
          Bootstrap:
            - ConfigCFNTools
          Update:
            - ConfigCFNTools
    Properties:
      EbsOptimized: !If
        - DefaultEbsOptimizationCondition
        - !Ref 'AWS::NoValue'
        - !Ref 'EbsOptimized'
      IamInstanceProfile: !If
        - CreateInstanceProfileCondition
        - !Ref 'InstanceProfile'
        - !Ref 'InstanceProfileArn'
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref 'InstanceType'
          - Arch
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyName'
      Monitoring: !Ref 'DetailedMonitoring'
      NetworkInterfaces:
        - AssociatePublicIpAddress: !Ref 'AssociatePublicIp'
          DeleteOnTermination: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !If
              - CreateSecurityGroupCondition
              - !Ref 'SshSecurityGroup'
              - !Ref 'InstanceSecurityGroupId'
          SubnetId: !Ref 'SubnetId'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
      UserData: !Base64
        Fn::Sub: "#!/bin/bash -xe\n# Update CloudFormation tools\nyum update -y aws-cfn-bootstrap\n\
          \n# Run CloudFormation tools init\n/opt/aws/bin/cfn-init -v     --stack\
          \ ${AWS::StackName}     --resource AWSLinuxInstance     --configsets Bootstrap\
          \     --region ${AWS::Region}\n    \n/opt/aws/bin/cfn-signal -e $?     --stack\
          \ ${AWS::StackName}     --resource AWSLinuxInstance     --region ${AWS::Region}\n"
    Type: AWS::EC2::Instance
  EIPAssociation:
    Condition: AllocateElasticIpCondition
    Properties:
      AllocationId: !GetAtt 'ElasticIP.AllocationId'
      InstanceId: !Ref 'AWSLinuxInstance'
    Type: AWS::EC2::EIPAssociation
  ElasticIP:
    Condition: AllocateElasticIpCondition
    DependsOn: AWSLinuxInstance
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  InstanceProfile:
    Condition: CreateInstanceProfileCondition
    Properties:
      Roles:
        - !Ref 'InstanceRole'
    Type: AWS::IAM::InstanceProfile
  InstanceRole:
    Condition: CreateInstanceProfileCondition
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'ec2.${AWS::URLSuffix}'
      ManagedPolicyArns:
        - !If
          - SSMEnabledCondition
          - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
          - !Ref 'AWS::NoValue'
      Policies: []
    Type: AWS::IAM::Role
  SshSecurityGroup:
    Condition: CreateSecurityGroupCondition
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - CidrIp: !Ref 'SshLocation'
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  Volume1:
    Condition: Volume1Condition
    Properties:
      AvailabilityZone: !GetAtt 'AWSLinuxInstance.AvailabilityZone'
      Encrypted: !If
        - VolumeEncryptedCondition
        - 'true'
        - 'false'
      Iops: !If
        - Volume1IopsOptimizedCondition
        - !Ref 'Volume1Iops'
        - !Ref 'AWS::NoValue'
      KmsKeyId: !If
        - VolumeEncryptedCondition
        - !Ref 'VolumeEncryptionKey'
        - !Ref 'AWS::NoValue'
      Size: !Ref 'Volume1Size'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
      VolumeType: !Ref 'Volume1Type'
    Type: AWS::EC2::Volume
  Volume1Attachment:
    Condition: Volume1Condition
    Properties:
      Device: !Ref 'Volume1Device'
      InstanceId: !Ref 'AWSLinuxInstance'
      VolumeId: !Ref 'Volume1'
    Type: AWS::EC2::VolumeAttachment
